openapi: 3.0.0
info:
  title: 'Auth service'
  version: '1.0.0'
servers:
  - url: '/api/v1'

paths:
  /public/reg:
    post:
      tags:
        - Reg
      summary: 'Registration'
      operationId: 'regUser'
      description: 'Зарегистрироваться'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: 'User information'
  /public/reg/{id}:
    post:
      tags:
        - Reg
      parameters:
        - $ref: '#/components/parameters/Identifier'
      summary: 'Registration by invite'
      operationId: 'regUserByInvite'
      description: 'Зарегистрироваться по приглашению'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegUserRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: 'User information'
  /oauth2/token:
    post:
      tags:
        - Auth
      summary: 'Auth by client credentials'
      operationId: 'authenticate'
      description: 'Авторизоваться по oauth2 flow'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: 'Token information'
  /current-user/group:
    get:
      tags:
        - CurrentUser
      summary: 'Get user group'
      operationId: 'findGroup'
      description: 'Получить информацию о группе пользователя'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: 'User information'

components:
  parameters:
    Identifier:
      name: 'id'
      in: path
      required: true
      description: 'Идентификатор в ссылке'
      schema:
        type: string
        format: uuid
  schemas:
    RegUserRequest:
      properties:
        username:
          type: string
          description: 'Никнейм пользователя(в случае отсутствия - email)'
          example: 'IvanovIvan'
        email:
          type: string
          description: 'Почта пользователя'
          example: 'email@email.ru'
          x-constraints: '@Email(message = "{user.email.incorrect}")'
        password:
          type: string
          description: 'Пароль пользователя'
          example: 'password'
          x-constraints: '@Size(min = 10, max = 32,message = "{user.password.size}")'
        firstName:
          type: string
          description: 'Имя пользователя'
          x-constraints: '@NotBlank(message = "{user.first_name.is_blank}")'
        lastName:
          type: string
          description: 'Фамилия пользователя'
    UserInfo:
      required:
        - email
        - username
        - firstName
      properties:
        username:
          type: string
          description: 'Никнейм пользователя(в случае отсутствия - email)'
          example: 'IvanovIvan'
        email:
          type: string
          description: 'Почта пользователя'
          example: 'email@email.ru'
        firstName:
          type: string
          description: 'Имя пользователя'
          example: 'Иван'
        lastName:
          type: string
          nullable: true
          description: 'Фамилия пользователя'
          example: 'Иванов'
        createdDate:
          type: string
          format: date-time
          example: '2021-01-30T08:30:00Z'
          description: 'Дата регистрации'
        lastLogin:
          nullable: true
          type: string
          format: date-time
          example: '2021-01-30T08:30:00Z'
          description: 'Дата последнего входа'
    Group:
      required:
        - inviteLink
      properties:
        title:
          type: string
          description: 'Название группы'
          example: 'Группы пользователя Иванов'
        inviteLink:
          type: string
          description: 'Ссылка для присоединения к группе'
          example: 'http://localhost:8080/invite/932a20ac-1081-42a4-bbe4-902c6afc2640'
        members:
          type: array
          description: 'Участники группы'
          items:
            $ref: '#/components/schemas/UserInfo'
    TokenRequest:
      type: object
      description: 'Параметры авторизации по oAuth2: https://auth0.com/docs/authenticate/protocols/oauth'
      additionalProperties:
        type: string
    TokenResponse:
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          description: 'Токен доступа'
          example: '123123asd3'
        token_type:
          type: string
          description: 'Тип токена'
          example: 'BEARER'
        expires_in:
          type: integer
          format: int64
          description: 'Время жизни токена'
          example: '1302'
        refresh_token:
          type: string
          description: 'Токен обновления'
          example: '123123asd3'
        scope:
          type: array
          items:
            type: string
          description: 'Разрешения(или роли)'
          example: 'READ,WRITE'