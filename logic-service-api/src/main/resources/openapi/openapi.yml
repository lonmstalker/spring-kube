openapi: 3.0.0
info:
  title: 'Logic service'
  version: '1.0.0'
servers:
  - url: '/api/v1'

paths:
  /bot/{id}:
    get:
      summary: 'Get bot by id'
      operationId: 'findById'
      description: 'Получить бота по идентификатору'
      tags:
        - Bot
      parameters:
        - $ref: '#/components/parameters/Identifier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: 'Bot information'
  /bot/list:
    get:
      summary: 'Get bots'
      operationId: 'getBots'
      description: 'Получить информацию о ботах группы'
      tags:
        - Bot
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bots'
          description: 'Array of Bot information'
  /current-user/bot/list:
    get:
      summary: 'Get bots by group'
      operationId: 'getBotsByGroup'
      description: 'Получить информацию о своих ботах'
      tags:
        - CurrentUser
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bots'
          description: 'Array of Bot information'
  /bot:
    post:
      summary: 'Save bot'
      operationId: 'saveBot'
      description: 'Сохранить бота'
      tags:
        - Bot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: 'Bot information'
    put:
      summary: 'Update bot'
      operationId: 'updateBot'
      description: 'Обновить бота'
      tags:
        - Bot
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bot'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bot'
          description: 'Bot information'

components:
  parameters:
    Identifier:
      name: 'id'
      in: path
      required: true
      description: 'Идентификатор в ссылке'
      schema:
        type: string
        format: uuid
  schemas:
    Bots:
      type: array
      items:
        $ref: '#/components/schemas/Bot'
    Bot:
      required:
        - title
        - url
        - hash
      properties:
        id:
          type: string
          format: uuid
          description: 'Идентификатор бота'
        title:
          type: string
          description: 'Название бота'
        url:
          type: string
          description: 'Ссылка на бота'
        hash:
          type: string
          description: 'Хеш для подключения к боту'
        status:
          type: string
          enum: ['enabled', 'disabled', 'blocked']
          description: 'Статус работоспособности бота'
        createdBy:
          type: string
          format: uuid
          description: 'Идентификато создателя бота'
        createdDate:
          type: string
          format: date-time
          example: '2021-01-30T08:30:00Z'
          description: 'Дата создания бота'
        version:
          type: integer
          format: i32
          description: 'Версия бота'